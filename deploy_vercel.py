"""
–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel
"""
import subprocess
import os
import json

def deploy_to_vercel():
    """–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Vercel"""
    
    print("üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–∞ Vercel...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Vercel CLI
    try:
        result = subprocess.run(['vercel', '--version'], capture_output=True, text=True)
        if result.returncode != 0:
            print("‚ùå Vercel CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Vercel CLI: npm i -g vercel")
            return False
        else:
            print(f"‚úÖ Vercel CLI –Ω–∞–π–¥–µ–Ω: {result.stdout.strip()}")
    except FileNotFoundError:
        print("‚ùå Vercel CLI –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Vercel CLI: npm i -g vercel")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if not os.path.exists('.env'):
        print("‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üìù –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
    try:
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ...")
        result = subprocess.run(['vercel', '--prod'], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            print(f"üåê URL: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏: {e}")
        return False

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    env_vars = {
        'BOT_TOKEN': '–¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞',
        'DATABASE_URL': 'URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL',
        'REDIS_URL': 'URL Redis —Å–µ—Ä–≤–µ—Ä–∞',
        'SECRET_KEY': '–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        'ADMIN_USER_IDS': 'ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)',
        'WEBHOOK_URL': 'URL –≤–∞—à–µ–≥–æ Vercel –ø—Ä–æ–µ–∫—Ç–∞',
        'WEBHOOK_PATH': '/webhook'
    }
    
    print("\nüìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    for key, description in env_vars.items():
        print(f"   {key}: {description}")
    
    print("\nüí° –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ Vercel Dashboard:")
    print("   Settings ‚Üí Environment Variables")
    
    return True

def create_env_example():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞"""
    
    env_example = """# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è

# Telegram Bot
BOT_TOKEN=your_bot_token_here
WEBHOOK_URL=https://your-project.vercel.app
WEBHOOK_PATH=/webhook

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/tournament_bot
REDIS_URL=redis://localhost:6379/0

# Payment Systems
TELEGRAM_STARS_API_KEY=your_telegram_stars_api_key
YOO_KASSA_SHOP_ID=your_yookassa_shop_id
YOO_KASSA_SECRET_KEY=your_yookassa_secret_key
BINANCE_API_KEY=your_binance_api_key

# Security
SECRET_KEY=your-secret-key-here-change-this
ADMIN_USER_IDS=123456789,987654321

# Tournament Settings
MIN_WITHDRAWAL_AMOUNT=500.0
WITHDRAWAL_COMMISSION=0.03
RESERVE_PERCENTAGE=0.05

# Commission Rates
COMMISSION_RATES_LOW=0.20
COMMISSION_RATES_MEDIUM=0.15
COMMISSION_RATES_HIGH=0.10

# Game Settings
DUEL_TIMEOUT=1800
GROUP_TOURNAMENT_TIMEOUT=3600
MARATHON_TIMEOUT=86400
"""
    
    with open('.env.example', 'w', encoding='utf-8') as f:
        f.write(env_example)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env.example")
    print("üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è")

if __name__ == "__main__":
    print("üéØ –¢—É—Ä–Ω–∏—Ä–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Vercel")
    print("=" * 60)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ Vercel")
        print("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("3. –°–æ–∑–¥–∞—Ç—å .env.example")
        print("4. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): ").strip()
        
        if choice == "1":
            deploy_to_vercel()
        elif choice == "2":
            setup_environment()
        elif choice == "3":
            create_env_example()
        elif choice == "4":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
