"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram webhook
"""
import os
import requests
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.getenv('BOT_TOKEN')
    webhook_url = os.getenv('WEBHOOK_URL')
    webhook_path = os.getenv('WEBHOOK_PATH', '/webhook')
    
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    if not webhook_url:
        print("‚ùå WEBHOOK_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π URL webhook
    full_webhook_url = f"{webhook_url}{webhook_path}"
    
    print(f"ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è –±–æ—Ç–∞...")
    print(f"üì° URL: {full_webhook_url}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    data = {
        "url": full_webhook_url,
        "allowed_updates": ["message", "callback_query"]
    }
    
    try:
        response = requests.post(url, json=data)
        result = response.json()
        
        if result.get('ok'):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
            print(f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook: {e}")
        return False

def check_webhook():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook"""
    
    bot_token = os.getenv('BOT_TOKEN')
    
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    url = f"https://api.telegram.org/bot{bot_token}/getWebhookInfo"
    
    try:
        response = requests.get(url)
        result = response.json()
        
        if result.get('ok'):
            webhook_info = result.get('result', {})
            print("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:")
            print(f"   URL: {webhook_info.get('url', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if webhook_info.get('url') else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
            print(f"   –û—à–∏–±–∫–∏: {webhook_info.get('last_error_message', '–ù–µ—Ç –æ—à–∏–±–æ–∫')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ webhook: {e}")
        return False

def delete_webhook():
    """–£–¥–∞–ª–µ–Ω–∏–µ webhook (–¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ polling)"""
    
    bot_token = os.getenv('BOT_TOKEN')
    
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    url = f"https://api.telegram.org/bot{bot_token}/deleteWebhook"
    
    try:
        response = requests.post(url)
        result = response.json()
        
        if result.get('ok'):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: {e}")
        return False

def get_bot_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
    
    bot_token = os.getenv('BOT_TOKEN')
    
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    url = f"https://api.telegram.org/bot{bot_token}/getMe"
    
    try:
        response = requests.get(url)
        result = response.json()
        
        if result.get('ok'):
            bot_info = result.get('result', {})
            print("ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:")
            print(f"   –ò–º—è: {bot_info.get('first_name')}")
            print(f"   Username: @{bot_info.get('username')}")
            print(f"   ID: {bot_info.get('id')}")
            print(f"   –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: {'‚úÖ –î–∞' if bot_info.get('can_join_groups') else '‚ùå –ù–µ—Ç'}")
            print(f"   –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã: {'‚úÖ –î–∞' if bot_info.get('can_read_all_group_messages') else '‚ùå –ù–µ—Ç'}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result.get('description')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")
        print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å webhook")
        print("3. –£–¥–∞–ª–∏—Ç—å webhook")
        print("4. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
        print("5. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
        
        if choice == "1":
            setup_webhook()
        elif choice == "2":
            check_webhook()
        elif choice == "3":
            delete_webhook()
        elif choice == "4":
            get_bot_info()
        elif choice == "5":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
