"""
–û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
"""
import logging
from datetime import datetime
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from app.database.models import User, Transaction, TransactionType, TransactionStatus
from app.bot.keyboards import (
    get_main_menu_keyboard, get_games_menu_keyboard, 
    get_tournament_types_keyboard, get_profile_keyboard
)
from app.services.user_service import UserService
from app.services.payment_service import PaymentService

router = Router()
logger = logging.getLogger(__name__)


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_service = UserService(session)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    user = await user_service.get_user_by_telegram_id(message.from_user.id)
    
    if not user:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.create_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        welcome_text = f"""
üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Tournament Platform!</b>

–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! 

üèÜ –≠—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–≤ –≤ –∏–≥—Ä–∞—Ö –Ω–∞ –Ω–∞–≤—ã–∫–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–µ–Ω–µ–∂–Ω—ã–º–∏ –ø—Ä–∏–∑–∞–º–∏.

‚úÖ <b>–ß—Ç–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ:</b>
‚Ä¢ –ò–≥—Ä—ã –Ω–∞ –Ω–∞–≤—ã–∫–∏ (—à–∞—Ö–º–∞—Ç—ã, –Ω–∞—Ä–¥—ã, –∫–ª–∏–∫–µ—Ä, —Ä–µ–∞–∫—Ü–∏—è)
‚Ä¢ –ß–µ—Å—Ç–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è
‚Ä¢ –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã

‚ùå <b>–ß—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ:</b>
‚Ä¢ –ê–∑–∞—Ä—Ç–Ω—ã–µ –∏–≥—Ä—ã
‚Ä¢ –ò–≥—Ä—ã –Ω–∞ —É–¥–∞—á—É

üí∞ <b>–í–∞—à —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:</b> 0 ‚ÇΩ
üéÅ <b>–ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:</b> 100 ‚ÇΩ

–ù–∞–∂–º–∏—Ç–µ /deposit –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã!
        """
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await user_service.add_transaction(
            user_id=user.id,
            amount=100.0,
            transaction_type=TransactionType.REFERRAL_BONUS,
            description="–ë–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
        )
        
    else:
        welcome_text = f"""
üëã <b>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.first_name}!</b>

üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {user.balance} ‚ÇΩ
üèÜ <b>–†–µ–π—Ç–∏–Ω–≥:</b> {user.rating}
üéÆ <b>–ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ:</b> {user.games_played}
    """
    
    await message.answer(
        welcome_text,
        reply_markup=get_main_menu_keyboard()
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()


@router.message(F.text == "üéÆ –ò–≥—Ä—ã")
async def show_games_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –∏–≥—Ä"""
    text = """
üéÆ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:</b>

üëÜ <b>–ö–ª–∏–∫–µ—Ä</b> - —Ç–µ—Å—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∫–ª–∏–∫–æ–≤
‚ö° <b>–†–µ–∞–∫—Ü–∏—è</b> - —Ç–µ—Å—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ–∞–∫—Ü–∏–∏  
üß© <b>2048</b> - –ª–æ–≥–∏—á–µ—Å–∫–∞—è –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∞
‚ôüÔ∏è <b>–®–∞—Ö–º–∞—Ç—ã</b> - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞
üé≤ <b>–ù–∞—Ä–¥—ã</b> - —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞
üîç <b>–°–∞–ø–µ—Ä</b> - –ª–æ–≥–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞

–í—Å–µ –∏–≥—Ä—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –Ω–∞–≤—ã–∫–∞—Ö, –∞ –Ω–µ –Ω–∞ —É–¥–∞—á–µ!
    """
    
    await message.answer(text, reply_markup=get_games_menu_keyboard())


@router.message(F.text == "üèÜ –¢—É—Ä–Ω–∏—Ä—ã")
async def show_tournaments_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ç—É—Ä–Ω–∏—Ä–æ–≤"""
    text = """
üèÜ <b>–¢–∏–ø—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤:</b>

‚öîÔ∏è <b>–î—É—ç–ª–∏ (1vs1)</b>
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–µ–¥–∏–Ω–∫–∏
‚Ä¢ –í–∑–Ω–æ—Å: 100-1000 ‚ÇΩ
‚Ä¢ –ü—Ä–∏–∑: 90% –æ—Ç –≤–∑–Ω–æ—Å–∞

üë• <b>–ì—Ä—É–ø–ø–æ–≤—ã–µ (8-16 —á–µ–ª–æ–≤–µ–∫)</b>
‚Ä¢ –¢—É—Ä–Ω–∏—Ä–Ω–∞—è —Å–µ—Ç–∫–∞
‚Ä¢ –í–∑–Ω–æ—Å: 50-200 ‚ÇΩ
‚Ä¢ –ü—Ä–∏–∑—ã: 1-–µ –º–µ—Å—Ç–æ 50%, 2-–µ 30%, 3-–µ 20%

üèÉ <b>–ú–∞—Ä–∞—Ñ–æ–Ω—ã (24 —á–∞—Å–∞)</b>
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è
‚Ä¢ –í–∑–Ω–æ—Å: 100-200 ‚ÇΩ
‚Ä¢ –ü—Ä–∏–∑—ã: —Ç–æ–ø-10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    """
    
    await message.answer(text, reply_markup=get_tournament_types_keyboard())


@router.message(F.text == "üí∞ –ë–∞–ª–∞–Ω—Å")
async def show_balance(message: Message, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_service = UserService(session)
    user = await user_service.get_user_by_telegram_id(message.from_user.id)
    
    if not user:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    recent_transactions = await user_service.get_recent_transactions(user.id, limit=5)
    
    text = f"""
üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {user.balance} ‚ÇΩ

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ü–æ–ø–æ–ª–Ω–µ–Ω–æ: {user.total_deposits} ‚ÇΩ
‚Ä¢ –í—ã–≤–µ–¥–µ–Ω–æ: {user.total_withdrawals} ‚ÇΩ
‚Ä¢ –í—ã–∏–≥—Ä–∞–Ω–æ: {user.total_winnings} ‚ÇΩ

üìã <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:</b>
    """
    
    if recent_transactions:
        for transaction in recent_transactions:
            status_emoji = "‚úÖ" if transaction.status == TransactionStatus.COMPLETED else "‚è≥"
            text += f"\n{status_emoji} {transaction.amount} ‚ÇΩ - {transaction.description}"
    else:
        text += "\n–ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π"
    
    text += "\n\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /deposit –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ /withdraw –¥–ª—è –≤—ã–≤–æ–¥–∞"
    
    await message.answer(text)


@router.message(F.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: Message, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_service = UserService(session)
    user = await user_service.get_user_by_telegram_id(message.from_user.id)
    
    if not user:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
        return
    
    # –°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    verification_status = "‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if user.is_verified else "‚ùå –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
    premium_status = "‚≠ê –ü—Ä–µ–º–∏—É–º" if user.is_premium else "üîí –û–±—ã—á–Ω—ã–π"
    
    text = f"""
üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>

üë§ <b>–ò–º—è:</b> {user.first_name} {user.last_name or ''}
üÜî <b>ID:</b> {user.telegram_id}
üìÖ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b> {user.created_at.strftime('%d.%m.%Y')}
{verification_status}
{premium_status}

üèÜ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: {user.rating}
‚Ä¢ –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user.games_played}
‚Ä¢ –ò–≥—Ä –≤—ã–∏–≥—Ä–∞–Ω–æ: {user.games_won}
‚Ä¢ –¢—É—Ä–Ω–∏—Ä–æ–≤ —Å—ã–≥—Ä–∞–Ω–æ: {user.tournaments_played}
‚Ä¢ –¢—É—Ä–Ω–∏—Ä–æ–≤ –≤—ã–∏–≥—Ä–∞–Ω–æ: {user.tournaments_won}

üí∞ <b>–§–∏–Ω–∞–Ω—Å—ã:</b>
‚Ä¢ –ë–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ
‚Ä¢ –í—Å–µ–≥–æ –≤—ã–∏–≥—Ä–∞–Ω–æ: {user.total_winnings} ‚ÇΩ
    """
    
    await message.answer(text, reply_markup=get_profile_keyboard())


@router.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_statistics(message: Message, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    user_service = UserService(session)
    user = await user_service.get_user_by_telegram_id(message.from_user.id)
    
    if not user:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
        return
    
    # –†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø–æ–±–µ–¥
    win_rate = (user.games_won / user.games_played * 100) if user.games_played > 0 else 0
    tournament_win_rate = (user.tournaments_won / user.tournaments_played * 100) if user.tournaments_played > 0 else 0
    
    text = f"""
üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üéÆ <b>–ò–≥—Ä—ã:</b>
‚Ä¢ –°—ã–≥—Ä–∞–Ω–æ: {user.games_played}
‚Ä¢ –í—ã–∏–≥—Ä–∞–Ω–æ: {user.games_won}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: {win_rate:.1f}%

üèÜ <b>–¢—É—Ä–Ω–∏—Ä—ã:</b>
‚Ä¢ –°—ã–≥—Ä–∞–Ω–æ: {user.tournaments_played}
‚Ä¢ –í—ã–∏–≥—Ä–∞–Ω–æ: {user.tournaments_won}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: {tournament_win_rate:.1f}%

üí∞ <b>–§–∏–Ω–∞–Ω—Å—ã:</b>
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ: {user.total_deposits} ‚ÇΩ
‚Ä¢ –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: {user.total_withdrawals} ‚ÇΩ
‚Ä¢ –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥: {user.total_winnings - user.total_deposits:.2f} ‚ÇΩ

üèÖ <b>–†–µ–π—Ç–∏–Ω–≥:</b> {user.rating}
    """
    
    await message.answer(text)


@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def show_help(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
    text = """
‚ùì <b>–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>

ü§ñ <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
/balance - –ë–∞–ª–∞–Ω—Å –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
/deposit - –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
/withdraw - –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞
/tournaments - –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:</b>
1. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ /deposit
2. –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É –≤ –º–µ–Ω—é "üéÆ –ò–≥—Ä—ã"
3. –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö
4. –í—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –ø—Ä–∏–∑—ã!

üí∞ <b>–ü–ª–∞—Ç–µ–∂–∏:</b>
‚Ä¢ Telegram Stars (–æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥)
‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã (–ÆKassa)
‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ (USDT)

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b>
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: 500 ‚ÇΩ
‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è –Ω–∞ –≤—ã–≤–æ–¥: 3%
‚Ä¢ –í—Å–µ –∏–≥—Ä—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –Ω–∞–≤—ã–∫–∞—Ö

üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
@support_username - –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
    """
    
    await message.answer(text)


@router.callback_query(F.data == "back_to_main")
async def back_to_main(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.message.edit_text(
        "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_games")
async def back_to_games(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∏–≥—Ä–∞–º"""
    await callback.message.edit_text(
        "üéÆ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:</b>",
        reply_markup=get_games_menu_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_tournaments")
async def back_to_tournaments(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ —Ç—É—Ä–Ω–∏—Ä–∞–º"""
    await callback.message.edit_text(
        "üèÜ <b>–¢–∏–ø—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤:</b>",
        reply_markup=get_tournament_types_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_balance")
async def back_to_balance(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –±–∞–ª–∞–Ω—Å—É"""
    await callback.message.edit_text(
        "üí∞ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–º</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_main_menu_keyboard()
    )
    await callback.answer()
